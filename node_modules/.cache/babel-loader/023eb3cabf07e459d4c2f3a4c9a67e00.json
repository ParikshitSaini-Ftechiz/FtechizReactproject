{"ast":null,"code":"var _jsxFileName = \"/home/hp-pc08/Desktop/project/e_commerce_website/src/components/context/Filter_Context.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useEffect, useReducer } from \"react\";\nimport { useProductContext } from \"./productContext\";\nimport reducer from \"../reducer/FilterReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FilterContext = /*#__PURE__*/createContext();\nconst initialState = {\n  filter_products: [],\n  all_products: [],\n  grid_view: true,\n  sorting_value: \"lowest\",\n  clearFilters: \"\",\n  filters: {\n    text: \"\",\n    category: \"all\",\n    company: \"all\",\n    color: \"all\",\n    maxPrice: 0,\n    minPrice: 0,\n    price: 0\n  }\n};\nconst FilterContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const {\n    products\n  } = useProductContext();\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  //set grid view//\n  const setGridView = () => {\n    return dispatch({\n      type: \"SET_GRID_VIEW\"\n    });\n  };\n  //set list view//\n  const setListView = () => {\n    return dispatch({\n      type: \"SET_LIST_VIEW\"\n    });\n  };\n  //dropdown value//\n  const sorting = event => {\n    let userValue = event.target.value;\n    return dispatch({\n      type: \"GET_SORT_VALUE\",\n      payload: userValue\n    });\n  };\n\n  //update filter value (search input)\n\n  const updateFilterValue = event => {\n    let name = event.target.name;\n    let value = event.target.value;\n    return dispatch({\n      type: \"UPDATE_FIlTER_VAlUE\",\n      payload: {\n        name,\n        value\n      }\n    });\n  };\n  const clearFilters = () => {\n    return dispatch({\n      type: \"CLEAR_FILTER\"\n    });\n  };\n  // to sort the product\n  useEffect(() => {\n    dispatch({\n      type: \"FILTER_PRODUCTS\"\n    });\n    dispatch({\n      type: \"SORTING_PRODUCTS\"\n    });\n  }, [products, state.sorting_value, state.filters]);\n\n  // to load all the products for grid and list view\n  useEffect(() => {\n    dispatch({\n      type: \"LOAD_FILTER_PRODUCTS\",\n      payload: products\n    });\n  }, [products]);\n  return /*#__PURE__*/_jsxDEV(FilterContext.Provider, {\n    value: {\n      ...state,\n      setGridView,\n      setListView,\n      sorting,\n      updateFilterValue\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(FilterContextProvider, \"/D3NV/x4qf1s/6HNJiZbe3IRDzk=\", false, function () {\n  return [useProductContext];\n});\n_c = FilterContextProvider;\nconst useFilterContext = () => {\n  _s2();\n  return useContext(FilterContext);\n};\n_s2(useFilterContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport { useFilterContext, FilterContextProvider };\nvar _c;\n$RefreshReg$(_c, \"FilterContextProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useReducer","useProductContext","reducer","FilterContext","initialState","filter_products","all_products","grid_view","sorting_value","clearFilters","filters","text","category","company","color","maxPrice","minPrice","price","FilterContextProvider","children","products","state","dispatch","setGridView","type","setListView","sorting","event","userValue","target","value","payload","updateFilterValue","name","useFilterContext"],"sources":["/home/hp-pc08/Desktop/project/e_commerce_website/src/components/context/Filter_Context.js"],"sourcesContent":["import { createContext, useContext, useEffect, useReducer } from \"react\";\nimport { useProductContext } from \"./productContext\";\nimport reducer from \"../reducer/FilterReducer\";\n\nconst FilterContext = createContext();\n\nconst initialState = {\n  filter_products: [],\n  all_products: [],\n  grid_view: true,\n  sorting_value: \"lowest\",\n  clearFilters:\"\",\n  filters: {\n    text: \"\",\n    category: \"all\",\n    company: \"all\",\n    color: \"all\",\n    maxPrice:0,\n    minPrice:0,\n    price:0,\n  },\n};\nconst FilterContextProvider = ({ children }) => {\n  const { products } = useProductContext();\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  //set grid view//\n  const setGridView = () => {\n    return dispatch({ type: \"SET_GRID_VIEW\" });\n  };\n  //set list view//\n  const setListView = () => {\n    return dispatch({ type: \"SET_LIST_VIEW\" });\n  };\n  //dropdown value//\n  const sorting = (event) => {\n    let userValue = event.target.value;\n    return dispatch({ type: \"GET_SORT_VALUE\", payload: userValue });\n  };\n\n  //update filter value (search input)\n\n  const updateFilterValue = (event) => {\n    let name = event.target.name;\n    let value = event.target.value;\n\n    return dispatch({ type: \"UPDATE_FIlTER_VAlUE\", payload: { name, value } });\n  };\n \n  const clearFilters = () => {\n    return dispatch({type:\"CLEAR_FILTER\"});\n  }\n  // to sort the product\n  useEffect(() => {\n    dispatch({ type: \"FILTER_PRODUCTS\" });\n    dispatch({ type: \"SORTING_PRODUCTS\" });\n  }, [products, state.sorting_value, state.filters]);\n\n  // to load all the products for grid and list view\n  useEffect(() => {\n    dispatch({ type: \"LOAD_FILTER_PRODUCTS\", payload: products });\n  }, [products]);\n\n  return (\n    <FilterContext.Provider\n      value={{ ...state, setGridView, setListView, sorting, updateFilterValue }}\n    >\n      {children}\n    </FilterContext.Provider>\n  );\n};\n\nconst useFilterContext = () => {\n  return useContext(FilterContext);\n};\n\nexport { useFilterContext, FilterContextProvider };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}