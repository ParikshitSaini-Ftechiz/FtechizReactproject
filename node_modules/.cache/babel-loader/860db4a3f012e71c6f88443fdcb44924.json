{"ast":null,"code":"import { AccessibilityOutlined } from \"@mui/icons-material\";\nimport React from \"react\";\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD_TO_CART\") {\n    let {\n      id,\n      color,\n      count,\n      product\n    } = action.payload;\n    // console.log(product);\n\n    //existing product//\n    let existingProduct = state.cart.find(currentData => {\n      return currentData.id == id + color;\n    });\n    if (existingProduct) {\n      let updatedProduct = state.cart.map(currentData => {\n        if (currentData.id == id + color) {\n          let newCount = currentData.count + count;\n          if (newCount >= currentData.max) {\n            newCount = currentData.max;\n          }\n          return {\n            ...currentData,\n            count: newCount\n          };\n        } else {\n          return currentData;\n        }\n      });\n      return {\n        ...state,\n        cart: updatedProduct\n      };\n    } else {\n      let cartProducts;\n      cartProducts = {\n        id: id + color,\n        color,\n        count,\n        image: product.image[0].url,\n        name: product.name,\n        price: product.price,\n        max: product.stock\n      };\n      return {\n        ...state,\n        cart: [...state.cart, cartProducts]\n      };\n    }\n  }\n\n  // set increment and decrement//\n\n  if (action.type === \"SET_DECREMENT\") {\n    let updatedProduct = state.cart.map(currentData => {\n      if (currentData.id === action.payload) {\n        let decCount = currentData.count - 1;\n        if (decCount <= 0) {\n          decCount = 1;\n        }\n        return {\n          ...currentData,\n          count: decCount\n        };\n      } else {\n        return currentData;\n      }\n    });\n    return {\n      ...state,\n      cart: updatedProduct\n    };\n  }\n  if (action.type === \"SET_INCREMENT\") {\n    let updatedProduct = state.cart.map(currentData => {\n      if (currentData.id === action.payload) {\n        let incCount = currentData.count + 1;\n        if (incCount >= stock) {\n          incCount = stock.max;\n        }\n        return {\n          ...currentData,\n          count: incCount\n        };\n      } else {\n        return currentData;\n      }\n    });\n    return {\n      ...state,\n      cart: updatedProduct\n    };\n  }\n  if (action.type === \"DELETE_ITEM\") {\n    let updateCart = state.cart.filter(currentData => {\n      return currentData.id !== action.payload;\n    });\n    return {\n      ...state,\n      cart: updateCart\n    };\n  }\n  if (action.type === \"CLEAR_CART\") {\n    return {\n      ...state,\n      cart: []\n    };\n  }\n  return state;\n};\nexport default cartReducer;","map":{"version":3,"names":["AccessibilityOutlined","React","cartReducer","state","action","type","id","color","count","product","payload","existingProduct","cart","find","currentData","updatedProduct","map","newCount","max","cartProducts","image","url","name","price","stock","decCount","incCount","updateCart","filter"],"sources":["/home/hp-pc08/Desktop/project/e_commerce_website/src/components/reducer/cartReducer.js"],"sourcesContent":["import { AccessibilityOutlined } from \"@mui/icons-material\";\nimport React from \"react\";\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD_TO_CART\") {\n    let { id, color, count, product } = action.payload;\n    // console.log(product);\n\n    //existing product//\n    let existingProduct = state.cart.find((currentData) => {\n      return currentData.id == id + color;\n    });\n\n    if (existingProduct) {\n      let updatedProduct = state.cart.map((currentData) => {\n        if (currentData.id == id + color) {\n          let newCount = currentData.count + count;\n\n          if(newCount >= currentData.max){\n            newCount = currentData.max;\n          }\n          return {\n            ...currentData,\n            count: newCount,\n          };\n        }else{\n          return currentData;\n         }\n      });\n   return {\n    ...state,\n    cart:updatedProduct,\n   };\n    } else {\n      let cartProducts;\n\n      cartProducts = {\n        id: id + color,\n        color,\n        count,\n        image: product.image[0].url,\n        name: product.name,\n        price: product.price,\n        max: product.stock,\n      };\n\n      return {\n        ...state,\n        cart: [...state.cart, cartProducts],\n      };\n    }\n  }\n\n  // set increment and decrement//\n\nif(action.type === \"SET_DECREMENT\"){\n  let updatedProduct = state.cart.map((currentData) => {\n    if( currentData.id === action.payload){\nlet decCount = currentData.count-1;\nif(decCount <= 0){\n  decCount = 1;\n}\nreturn{\n  ...currentData,\n  count:decCount,\n}\n    }else{\n      return currentData;\n    }\n  })\n  return{\n...state, \ncart:updatedProduct,\n  }\n}\nif(action.type === \"SET_INCREMENT\"){\n  let updatedProduct = state.cart.map((currentData) => {\n    if( currentData.id === action.payload){\nlet incCount = currentData.count+1;\nif(incCount >= stock){\n  incCount = stock.max;\n}\nreturn{\n  ...currentData,\n  count:incCount,\n}\n    }else{\n      return currentData;\n    }\n  })\n  return{\n...state, \ncart:updatedProduct,\n  }\n}\n\n  if (action.type === \"DELETE_ITEM\") {\n    let updateCart = state.cart.filter((currentData) => {\n      return currentData.id !== action.payload;\n    });\n\n    return {\n      ...state,\n      cart: updateCart,\n    };\n  }\n\n  if (action.type === \"CLEAR_CART\") {\n    return {\n      ...state,\n      cart: [],\n    };\n  }\n\n  return state;\n};\n\nexport default cartReducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}