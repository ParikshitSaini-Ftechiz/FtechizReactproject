{"ast":null,"code":"const FilterReducer = (state, action) => {\n  switch (action.type) {\n    case \"LOAD_FILTER_PRODUCTS\":\n      return {\n        ...state,\n        filter_products: [...action.payload],\n        all_products: [...action.payload]\n      };\n    case \"SET_GRID_VIEW\":\n      return {\n        ...state,\n        grid_view: true\n      };\n    case \"SET_LIST_VIEW\":\n      return {\n        ...state,\n        grid_view: false\n      };\n\n    //  case \"GET_SORT_VALUE\":\n    //   // let userSortValue = document.getElementById(\"sort\");\n    //   // let sort_value = userSortValue.options[userSortValue.selectedIndex].value;\n\n    //   return {\n    //     ...state,\n    //     sorting_value:action.payload,\n    //   };\n\n    //  case \"SORTING_PRODUCTS\":\n    //   let newSortProduct;\n\n    //   const {sorting_value, filter_products} = state;\n\n    //   let tempSortProduct = [...filter_products];\n\n    //   const sortingProducts = (a,b) => {\n    //     if(sorting_value === \"lowest\") {\n    //       return  a.price - b.price\n    //     }\n    // //     if(sorting_value === \"highest\") {\n    // //       return b.price - a.price\n    // //     }\n    //   //    if(sorting_value === \"a-z\"){\n    //   //     return a.name.localCompare(b.name);\n    //   //  }\n    // //     if(sorting_value === \"z-a\") {\n    // //       return b.name.localCompare(a.name);\n    // //     }\n\n    //   };\n\n    //   newSortProduct = tempSortProduct.sort(sortingProducts);\n\n    //   return{\n    //     ...state,\n    //     filter_products:newSortProduct,\n    //   }\n\n    case \"UPDATE_FIlTER_VAlUE\":\n      const {\n        name,\n        value\n      } = action.payload;\n      return {\n        ...state,\n        filters: {\n          ...state.filters,\n          [name]: value\n        }\n      };\n    case \"FILTER_PRODUCTS\":\n      let {\n        all_products\n      } = state;\n      let tempFilterProduct = [...all_products];\n      const {\n        text,\n        category,\n        company\n      } = state.filters;\n      if (text) {\n        tempFilterProduct = tempFilterProduct.filter(currentData => {\n          return currentData.name.toLowerCase().includes(text);\n        });\n      }\n      if (category === !\"all\") {\n        tempFilterProduct = tempFilterProduct.filter(currentData => {\n          return currentData.category === category;\n        });\n      }\n      if (company === !\"all\") {\n        tempFilterProduct = tempFilterProduct.filter(currentData => {\n          return currentData.company.toLowerCase().includes(company);\n        });\n      }\n      return {\n        ...state,\n        filter_products: tempFilterProduct\n      };\n    default:\n      return state;\n  }\n};\n_c = FilterReducer;\nexport default FilterReducer;\nvar _c;\n$RefreshReg$(_c, \"FilterReducer\");","map":{"version":3,"names":["FilterReducer","state","action","type","filter_products","payload","all_products","grid_view","name","value","filters","tempFilterProduct","text","category","company","filter","currentData","toLowerCase","includes"],"sources":["/home/hp-pc08/Desktop/project/e_commerce_website/src/components/reducer/FilterReducer.js"],"sourcesContent":["const FilterReducer = (state, action) => {\n  switch (action.type) {\n    case \"LOAD_FILTER_PRODUCTS\":\n      return {\n        ...state,\n        filter_products: [...action.payload],\n        all_products: [...action.payload],\n      };\n\n    case \"SET_GRID_VIEW\":\n      return {\n        ...state,\n        grid_view: true,\n      };\n    case \"SET_LIST_VIEW\":\n      return {\n        ...state,\n        grid_view: false,\n      };\n\n    //  case \"GET_SORT_VALUE\":\n    //   // let userSortValue = document.getElementById(\"sort\");\n    //   // let sort_value = userSortValue.options[userSortValue.selectedIndex].value;\n\n    //   return {\n    //     ...state,\n    //     sorting_value:action.payload,\n    //   };\n\n    //  case \"SORTING_PRODUCTS\":\n    //   let newSortProduct;\n\n    //   const {sorting_value, filter_products} = state;\n\n    //   let tempSortProduct = [...filter_products];\n\n    //   const sortingProducts = (a,b) => {\n    //     if(sorting_value === \"lowest\") {\n    //       return  a.price - b.price\n    //     }\n    // //     if(sorting_value === \"highest\") {\n    // //       return b.price - a.price\n    // //     }\n    //   //    if(sorting_value === \"a-z\"){\n    //   //     return a.name.localCompare(b.name);\n    //   //  }\n    // //     if(sorting_value === \"z-a\") {\n    // //       return b.name.localCompare(a.name);\n    // //     }\n\n    //   };\n\n    //   newSortProduct = tempSortProduct.sort(sortingProducts);\n\n    //   return{\n    //     ...state,\n    //     filter_products:newSortProduct,\n    //   }\n\n    case \"UPDATE_FIlTER_VAlUE\":\n      const { name, value } = action.payload;\n\n      return {\n        ...state,\n        filters: {\n          ...state.filters,\n          [name]: value,\n        },\n      };\n\n    case \"FILTER_PRODUCTS\":\n      let { all_products } = state;\n      let tempFilterProduct = [...all_products];\n\n      const { text , category ,company} = state.filters;\n\n      if (text) {\n        tempFilterProduct = tempFilterProduct.filter((currentData) => {\n          return currentData.name.toLowerCase().includes(text);\n        });\n      }\n      if (category ===! \"all\") {\n        tempFilterProduct = tempFilterProduct.filter((currentData) => {\n          return currentData.category === category;\n        });\n      }\n      if (company ===! \"all\") {\n        tempFilterProduct = tempFilterProduct.filter((currentData) => {\n          return currentData.company.toLowerCase().includes(company);\n        });\n      }\n      return {\n        ...state,\n        filter_products: tempFilterProduct,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default FilterReducer;\n"],"mappings":"AAAA,MAAMA,aAAa,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;EACvC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,sBAAsB;MACzB,OAAO;QACL,GAAGF,KAAK;QACRG,eAAe,EAAE,CAAC,GAAGF,MAAM,CAACG,OAAO,CAAC;QACpCC,YAAY,EAAE,CAAC,GAAGJ,MAAM,CAACG,OAAO;MAClC,CAAC;IAEH,KAAK,eAAe;MAClB,OAAO;QACL,GAAGJ,KAAK;QACRM,SAAS,EAAE;MACb,CAAC;IACH,KAAK,eAAe;MAClB,OAAO;QACL,GAAGN,KAAK;QACRM,SAAS,EAAE;MACb,CAAC;;IAEH;IACA;IACA;;IAEA;IACA;IACA;IACA;;IAEA;IACA;;IAEA;;IAEA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;;IAEA;;IAEA;IACA;IACA;IACA;;IAEA,KAAK,qBAAqB;MACxB,MAAM;QAAEC,IAAI;QAAEC;MAAM,CAAC,GAAGP,MAAM,CAACG,OAAO;MAEtC,OAAO;QACL,GAAGJ,KAAK;QACRS,OAAO,EAAE;UACP,GAAGT,KAAK,CAACS,OAAO;UAChB,CAACF,IAAI,GAAGC;QACV;MACF,CAAC;IAEH,KAAK,iBAAiB;MACpB,IAAI;QAAEH;MAAa,CAAC,GAAGL,KAAK;MAC5B,IAAIU,iBAAiB,GAAG,CAAC,GAAGL,YAAY,CAAC;MAEzC,MAAM;QAAEM,IAAI;QAAGC,QAAQ;QAAEC;MAAO,CAAC,GAAGb,KAAK,CAACS,OAAO;MAEjD,IAAIE,IAAI,EAAE;QACRD,iBAAiB,GAAGA,iBAAiB,CAACI,MAAM,CAAEC,WAAW,IAAK;UAC5D,OAAOA,WAAW,CAACR,IAAI,CAACS,WAAW,EAAE,CAACC,QAAQ,CAACN,IAAI,CAAC;QACtD,CAAC,CAAC;MACJ;MACA,IAAIC,QAAQ,KAAI,CAAE,KAAK,EAAE;QACvBF,iBAAiB,GAAGA,iBAAiB,CAACI,MAAM,CAAEC,WAAW,IAAK;UAC5D,OAAOA,WAAW,CAACH,QAAQ,KAAKA,QAAQ;QAC1C,CAAC,CAAC;MACJ;MACA,IAAIC,OAAO,KAAI,CAAE,KAAK,EAAE;QACtBH,iBAAiB,GAAGA,iBAAiB,CAACI,MAAM,CAAEC,WAAW,IAAK;UAC5D,OAAOA,WAAW,CAACF,OAAO,CAACG,WAAW,EAAE,CAACC,QAAQ,CAACJ,OAAO,CAAC;QAC5D,CAAC,CAAC;MACJ;MACA,OAAO;QACL,GAAGb,KAAK;QACRG,eAAe,EAAEO;MACnB,CAAC;IACH;MACE,OAAOV,KAAK;EAAC;AAEnB,CAAC;AAAC,KAlGID,aAAa;AAoGnB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module"}